[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\xiaod\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\xiaod\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 130.4878ms
[debug]       Load.loadUnit: defsScala took 0.2472ms
[debug] [Loading] Scanning directory C:\Users\xiaod\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\xiaod\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9948 ms
[debug]           Load.resolveProject(global-plugins) took 52.5977ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\xiaod\.sbt\1.0\plugins, plugins: List(<none>))) took 93.7944ms
[debug] [Loading] Done in C:\Users\xiaod\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 114.6031ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.253ms
[debug]     Load.loadUnit(file:/C:/Users/xiaod/.sbt/1.0/plugins/, ...) took 254.7806ms
[debug]   Load.apply: load took 513.4825ms
[debug]   Load.apply: resolveProjects took 9.3967ms
[debug]   Load.apply: finalTransforms took 243.1289ms
[debug]   Load.apply: config.delegates took 12.126ms
[debug]   Load.apply: Def.make(settings)... took 1006.8669ms
[debug]   Load.apply: structureIndex took 401.2894ms
[debug]   Load.apply: mkStreams took 8.8326ms
[info] loading global plugins from C:\Users\xiaod\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5485.6119ms
[debug]           Load.loadUnit: plugins took 36.1158ms
[debug]           Load.loadUnit: defsScala took 0.0087ms
[debug] [Loading] Scanning directory C:\Users\xiaod\Desktop\it5100adb\project
[debug]             Load.loadUnit: mkEval took 5.8345ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9348 ms
[info] loading settings for project it5100adb-build from idea.sbt ...
[debug]               Load.resolveProject(it5100adb-build) took 2.1813ms
[debug]             Load.loadTransitive: finalizeProject(Project(id it5100adb-build, base: C:\Users\xiaod\Desktop\it5100adb\project, plugins: List(<none>))) took 4.5617ms
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb\project, returning: (it5100adb-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 140.6059ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9863ms
[debug]         Load.loadUnit(file:/C:/Users/xiaod/Desktop/it5100adb/project/, ...) took 182.9603ms
[debug]       Load.apply: load took 184.2989ms
[debug]       Load.apply: resolveProjects took 0.1344ms
[debug]       Load.apply: finalTransforms took 6.4931ms
[debug]       Load.apply: config.delegates took 0.3339ms
[debug]       Load.apply: Def.make(settings)... took 137.5481ms
[debug]       Load.apply: structureIndex took 37.3343ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\xiaod\Desktop\it5100adb\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 967.7861ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\xiaod\Desktop\it5100adb
[debug]       Load.loadUnit: mkEval took 0.1885ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2508 ms
[info] loading settings for project it5100adb from build.sbt ...
[debug]         Load.resolveProject(it5100adb) took 34.9915ms
[debug]       Load.loadTransitive: finalizeProject(Project(id it5100adb, base: C:\Users\xiaod\Desktop\it5100adb, plugins: List(<none>))) took 38.2257ms
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb, returning: (it5100adb)
[debug]     Load.loadUnit: loadedProjectsRaw took 84.0137ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.8549ms
[debug]   Load.loadUnit(file:/C:/Users/xiaod/Desktop/it5100adb/, ...) took 1060.6252ms
[debug] Load.apply: load took 1063.3507ms
[debug] Load.apply: resolveProjects took 0.0959ms
[debug] Load.apply: finalTransforms took 29.136ms
[debug] Load.apply: config.delegates took 0.4978ms
[debug] Load.apply: Def.make(settings)... took 152.0934ms
[debug] Load.apply: structureIndex took 23.0093ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to it5100adb (in build file:/C:/Users/xiaod/Desktop/it5100adb/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
