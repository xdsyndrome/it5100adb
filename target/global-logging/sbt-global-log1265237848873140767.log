[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\xiaod\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\xiaod\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 72.8386ms
[debug]       Load.loadUnit: defsScala took 0.2626ms
[debug] [Loading] Scanning directory C:\Users\xiaod\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\xiaod\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.271 ms
[debug]           Load.resolveProject(global-plugins) took 37.7001ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\xiaod\.sbt\1.0\plugins, plugins: List(<none>))) took 75.8396ms
[debug] [Loading] Done in C:\Users\xiaod\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 92.774ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2168ms
[debug]     Load.loadUnit(file:/C:/Users/xiaod/.sbt/1.0/plugins/, ...) took 173.1965ms
[debug]   Load.apply: load took 353.2344ms
[debug]   Load.apply: resolveProjects took 5.5622ms
[debug]   Load.apply: finalTransforms took 179.9737ms
[debug]   Load.apply: config.delegates took 24.7573ms
[debug]   Load.apply: Def.make(settings)... took 783.0548ms
[debug]   Load.apply: structureIndex took 111.231ms
[debug]   Load.apply: mkStreams took 1.564ms
[info] loading global plugins from C:\Users\xiaod\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8743.156ms
[debug]           Load.loadUnit: plugins took 19.3945ms
[debug]           Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\xiaod\Desktop\it5100adb\project
[debug]             Load.loadUnit: mkEval took 4.844ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9189 ms
[info] loading settings for project it5100adb-build from idea.sbt ...
[debug]               Load.resolveProject(it5100adb-build) took 6.6655ms
[debug]             Load.loadTransitive: finalizeProject(Project(id it5100adb-build, base: C:\Users\xiaod\Desktop\it5100adb\project, plugins: List(<none>))) took 10.0785ms
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb\project, returning: (it5100adb-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2572.7641ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.0187ms
[debug]         Load.loadUnit(file:/C:/Users/xiaod/Desktop/it5100adb/project/, ...) took 2599.0286ms
[debug]       Load.apply: load took 2600.5751ms
[debug]       Load.apply: resolveProjects took 0.3044ms
[debug]       Load.apply: finalTransforms took 23.7409ms
[debug]       Load.apply: config.delegates took 0.399ms
[debug]       Load.apply: Def.make(settings)... took 101.6269ms
[debug]       Load.apply: structureIndex took 34.7996ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\xiaod\Desktop\it5100adb\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5900.2414ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\xiaod\Desktop\it5100adb
[debug]       Load.loadUnit: mkEval took 0.2019ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9766 ms
[info] loading settings for project it5100adb from build.sbt ...
[debug]         Load.resolveProject(it5100adb) took 89.3508ms
[debug]       Load.loadTransitive: finalizeProject(Project(id it5100adb, base: C:\Users\xiaod\Desktop\it5100adb, plugins: List(<none>))) took 98.231ms
[debug] [Loading] Done in C:\Users\xiaod\Desktop\it5100adb, returning: (it5100adb)
[debug]     Load.loadUnit: loadedProjectsRaw took 2165.5208ms
[debug]     Load.loadUnit: cleanEvalClasses took 44.6645ms
[debug]   Load.loadUnit(file:/C:/Users/xiaod/Desktop/it5100adb/, ...) took 8111.9871ms
[debug] Load.apply: load took 8115.2131ms
[debug] Load.apply: resolveProjects took 0.1148ms
[debug] Load.apply: finalTransforms took 31.3061ms
[debug] Load.apply: config.delegates took 0.2744ms
[debug] Load.apply: Def.make(settings)... took 249.753ms
[debug] Load.apply: structureIndex took 46.365ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to it5100adb (in build file:/C:/Users/xiaod/Desktop/it5100adb/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61735 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61735, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to it5100adb (in build file:/C:/Users/xiaod/Desktop/it5100adb/)
[debug] > Exec(idea-shell, None, None)
